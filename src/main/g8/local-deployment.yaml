# namespace
apiVersion: v1
kind: Namespace
metadata:
  name: $organization;format="normalize"$
---

# service
apiVersion: v1
kind: Service
metadata:
  name: $name;format="normalize"$
  namespace: $organization;format="normalize"$
spec:
  selector:
    app: $name;format="normalize"$-app
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 8080
  type: LoadBalancer
---

# volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/vol/data"
---

# volume request
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---

# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $name;format="normalize"$-deployment
  namespace: $organization;format="normalize"$
  labels:
    app: $name;format="normalize"$
spec:
  replicas: 3
  # how the Deployment finds which Pods to manage
  selector:
    matchLabels:
      app: $name;format="normalize"$-app
  # Pod's template
  template:
    metadata:
      name: $name;format="normalize"$
      labels:
        app: $name;format="normalize"$-app
    spec:
      #volumes:
      #  - name: local-pv-storage
      #    persistentVolumeClaim:
      #     claimName: local-pv-claim
      containers:
        - name: $name;format="normalize"$-pod
          image: $organization;format="normalize"$/$name;format="normalize"$:v1.0.0
          ports:
            - containerPort: 8080
          env:
            - name: HTTP_PORT
              value: "8080"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          # TODO permissions https://github.com/kubernetes/kubernetes/issues/2630
          #volumeMounts:
          #  - mountPath: "/opt/docker/log"
          #    name: local-pv-storage